package tags

import (
	"github.com/viddrobnic/sparovec/models"
	"github.com/viddrobnic/sparovec/features/layout"
	"fmt"
)

templ tagsView(tags []*models.Tag, navbar models.Navbar) {
	@layout.Layout(navbar) {
		<h1 class="text-5xl font-semibold">Tags</h1>
		<div
			class="grid grid-cols-1 gap-5 pt-6 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 justify-stretch"
			id="tags_grid"
		>
			for _, tag := range tags {
				@tagCard(tag)
			}
			<div
				role="button"
				class="shadow-lg transition-all cursor-pointer hover:shadow-xl hover:scale-105 card bg-base-100"
				onclick="create_tag_modal.showModal()"
			>
				<div class="flex flex-auto justify-center items-center p-7">
					<svg
						xmlns="http://www.w3.org/2000/svg"
						viewBox="0 0 24 24"
						fill="none"
						stroke="currentColor"
						stroke-width="2"
						stroke-linecap="round"
						stroke-linejoin="round"
						class="w-9 h-9"
					>
						<path d="M5 12h14"></path>
						<path d="M12 5v14"></path>
					</svg>
				</div>
			</div>
		</div>
		@createTagModal(navbar.SelectedWalletId)
		@updateTagModal(navbar.SelectedWalletId)
		@deleteTagModal(navbar.SelectedWalletId)
		<script>
            // Close create modal and reset form on success
            document.body.addEventListener("createSuccess", function (evt) {
                create_tag_modal.close()
                document.getElementById("create_tag_form").reset()
                })

            // Close update modal and reset form on success
            document.body.addEventListener("updateSuccess", function (evt) {
                    update_tag_modal.close()
                    document.getElementById("update_tag_form").reset()
                    })

            // Close delete modal and reset form on success
            document.body.addEventListener("deleteSuccess", function (evt) {
                    delete_tag_modal.close()
                    document.getElementById("delete_tag_form").reset()
                    })

            function show_update_tag_modal(id, name) {
                document.getElementById("update_tag_form_id").value = id
                    document.getElementById("update_tag_form_name").value = name
                    update_tag_modal.showModal()
            }

            function show_delete_tag_modal(id, name) {
                document.getElementById("delete_tag_form_id").value = id
                    document.getElementById("delete_tag_warn_name").innerHTML = name
                    delete_tag_modal.showModal()
            }
        </script>
	}
}

templ createTagModal(selectedWalletId int) {
	<dialog id="create_tag_modal" class="modal">
		<div class="max-w-sm modal-box">
			<h3 class="text-lg font-bold">Create a Tag</h3>
			<form
				id="create_tag_form"
				class="pt-4"
				hx-post={ fmt.Sprintf("/wallets/%d/tags", selectedWalletId) }
				hx-swap="outerHTML"
				hx-target="#tags_grid"
				hx-select="#tags_grid"
				hx-disabled-elt="#create_tag_button"
			>
				<input
					name="name"
					type="text"
					class="w-full input input-bordered"
					placeholder="Tag Name"
					required
				/>
				<div class="justify-between modal-action">
					<button type="button" class="btn" onclick="create_tag_modal.close()">
						Cancel
					</button>
					<button type="submit" class="btn btn-primary" id="create_tag_button">
						<span
							class="loading loading-spinner loading-xs loading-indicator"
						></span>
						Create
					</button>
				</div>
			</form>
		</div>
		<form method="dialog" class="modal-backdrop">
			<button>close</button>
		</form>
	</dialog>
}

templ updateTagModal(selectedWalletId int) {
	<dialog id="update_tag_modal" class="modal">
		<div class="max-w-sm modal-box">
			<h3 class="text-lg font-bold">Edit a Tag</h3>
			<form
				id="update_tag_form"
				class="py-4"
				hx-put={ fmt.Sprintf("/wallets/%d/tags", selectedWalletId) }
				hx-swap="outerHTML"
				hx-target="#tags_grid"
				hx-select="#tags_grid"
				hx-disabled-elt="#update_tag_button"
			>
				<input id="update_tag_form_id" name="id" type="text" hidden/>
				<input
					id="update_tag_form_name"
					name="name"
					type="text"
					class="w-full input input-bordered"
					placeholder="Tag Name"
					required
				/>
				<div class="justify-between modal-action">
					<button type="button" class="btn" onclick="update_tag_modal.close()">
						Cancel
					</button>
					<button type="submit" class="btn btn-primary" id="update_tag_button">
						<span
							class="loading loading-spinner loading-xs loading-indicator"
						></span>
						Save
					</button>
				</div>
			</form>
		</div>
		<form method="dialog" class="modal-backdrop">
			<button>close</button>
		</form>
	</dialog>
}

templ deleteTagModal(selectedWalletId int) {
	<dialog id="delete_tag_modal" class="modal">
		<div class="max-w-sm modal-box">
			<h3 class="text-lg font-bold">Delete a Tag</h3>
			<p class="pt-4">
				Are you sure you want to delete tag
				<span class="font-bold" id="delete_tag_warn_name"></span>? This action
				can't be undone!
			</p>
			<form
				id="delete_tag_form"
				hx-post={ fmt.Sprintf("/wallets/%d/tags/delete", selectedWalletId) }
				hx-swap="outerHTML"
				hx-target="#tags_grid"
				hx-select="#tags_grid"
				hx-disabled-elt="#delete_tag_button"
			>
				<input id="delete_tag_form_id" name="id" type="text" hidden/>
				<div class="justify-between modal-action">
					<button type="button" class="btn" onclick="delete_tag_modal.close()">
						Cancel
					</button>
					<button type="submit" class="btn btn-error" id="delete_tag_button">
						<span
							class="loading loading-spinner loading-xs loading-indicator"
						></span>
						Delete
					</button>
				</div>
			</form>
		</div>
		<form method="dialog" class="modal-backdrop">
			<button>close</button>
		</form>
	</dialog>
}

script showUpdateTagModal(id int, name string) {
    show_update_tag_modal(id, name)
}

script showDeleteTagModal(id int, name string) {
    show_delete_tag_modal(id, name)
}

templ tagCard(tag *models.Tag) {
	<div class="shadow-lg card bg-base-100">
		<div class="flex-row justify-between items-center card-body">
			<h2
				class="inline-block overflow-hidden max-w-full whitespace-nowrap card-title text-ellipsis"
			>
				{ tag.Name }
			</h2>
			<div class="dropdown dropdown-end">
				<label tabindex="0" class="btn btn-ghost btn-circle btn-sm">
					<svg
						xmlns="http://www.w3.org/2000/svg"
						viewBox="0 0 24 24"
						fill="none"
						stroke="currentColor"
						stroke-width="2"
						stroke-linecap="round"
						stroke-linejoin="round"
						class="w-4 h-4"
					>
						<circle cx="12" cy="12" r="1"></circle>
						<circle cx="12" cy="5" r="1"></circle>
						<circle cx="12" cy="19" r="1"></circle>
					</svg>
				</label>
				<ul
					tabindex="0"
					class="p-2 w-52 shadow dropdown-content z-[1] menu bg-base-100 rounded-box"
				>
					<li>
						<button onclick={ showUpdateTagModal(tag.Id, tag.Name) }>
							<svg
								xmlns="http://www.w3.org/2000/svg"
								viewBox="0 0 24 24"
								fill="none"
								stroke="currentColor"
								stroke-width="2"
								stroke-linecap="round"
								stroke-linejoin="round"
								class="mr-2 w-4 h-4"
							>
								<path d="M17 3a2.85 2.83 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5Z"></path>
								<path d="m15 5 4 4"></path>
							</svg>
							Edit
						</button>
					</li>
					<li>
						<button onclick={ showDeleteTagModal(tag.Id, tag.Name) }>
							<svg
								xmlns="http://www.w3.org/2000/svg"
								viewBox="0 0 24 24"
								fill="none"
								stroke="currentColor"
								stroke-width="2"
								stroke-linecap="round"
								stroke-linejoin="round"
								class="mr-2 w-4 h-4"
							>
								<path d="M3 6h18"></path>
								<path d="M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6"></path>
								<path d="M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2"></path>
								<line x1="10" x2="10" y1="11" y2="17"></line>
								<line x1="14" x2="14" y1="11" y2="17"></line>
							</svg>
							Delete
						</button>
					</li>
				</ul>
			</div>
		</div>
	</div>
}
